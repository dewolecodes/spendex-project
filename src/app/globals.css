@import "tailwindcss";

/* Theme variables (default to dark) */
:root {
  --background: #001726;
  --foreground: #ffffff;
  --muted: #9c9c9c;
  --card-bg: rgba(255,255,255,0.03);
  --accent: #2dd4bf; /* teal-400 */
}

/* Light theme overrides */
html[data-theme='light'] {
  --background: #f6f8fb;
  --foreground: #041025;
  --muted: #4b5563;
  --card-bg: rgba(2,6,23,0.04);
  --accent: #0ea5a4; /* teal-500 */
}

/* Dark theme (explicit) */
html[data-theme='dark'] {
  --background: #001726;
  --foreground: #ffffff;
  --muted: #9c9c9c;
  --card-bg: rgba(255,255,255,0.03);
  --accent: #2dd4bf;
}

body{
  position: relative !important;
}

/* Prevent horizontal scrolling across the site */
html, body {
  overflow-x: hidden;
}

/* Use CSS variables throughout */
body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
  transition: background-color 200ms ease, color 200ms ease;
}

/* Utilities */
.text-muted { color: var(--muted); }
.bg-card { background: var(--card-bg); }
.text-foreground { color: var(--foreground); }
.text-accent { color: var(--accent); }

/* Utilities for text placed on intentionally dark panels (keeps contrast in light theme) */
.text-on-dark { color: #ffffff; }
.text-on-dark-70 { color: rgba(255,255,255,0.7); }
.btn-toggle {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.4rem 0.6rem;
  border-radius: 9999px;
  background: transparent;
  color: var(--foreground);
  border: 1px solid rgba(255,255,255,0.06);
}
.btn-toggle:hover { filter: brightness(1.05); }

/* Icon specific styling */
.theme-icon {
  width: 18px;
  height: 18px;
  display: inline-block;
  transition: transform 180ms ease, opacity 180ms ease;
}
.theme-icon--enter {
  transform: rotate(-20deg) scale(0.9);
  opacity: 0;
}
.theme-icon--active {
  transform: rotate(0deg) scale(1);
  opacity: 1;
}

/* Make toggle visible on smaller screens too */
.mobile-visible { display: inline-flex; }
@media (max-width: 768px) {
  nav.hidden.md\:flex { display: flex; }
}

/* Slight nudge for mobile logo to the left for better visual alignment */
@media (max-width: 768px) {
  .logo-mobile {
    transform: translateX(-6px);
    display: inline-block;
    transition: transform 140ms ease;
  }
}

/* Themed components */
.btn {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  border-radius: 0.5rem;
  background: transparent;
  color: var(--foreground);
  border: 1px solid rgba(255,255,255,0.06);
  transition: background-color 160ms ease, color 160ms ease, transform 120ms ease;
}
.btn:hover { transform: translateY(-1px); }

.btn-primary {
  background: linear-gradient(90deg, var(--accent), color-mix(in srgb, var(--accent) 70%, black 10%));
  color: white;
  border: none;
}

.card {
  background: var(--card-bg);
  color: var(--foreground);
  border-radius: 0.75rem;
  padding: 1rem;
  box-shadow: 0 6px 18px rgba(0,0,0,0.08);
  transition: background-color 160ms ease, color 160ms ease;
}

.input {
  padding: 0.6rem 0.75rem;
  border-radius: 0.5rem;
  border: 1px solid rgba(0,0,0,0.08);
  background: color-mix(in srgb, var(--background) 60%, white 40%);
  color: var(--foreground);
  outline: none;
  transition: box-shadow 120ms ease, border-color 120ms ease;
}
.input:focus {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--accent) 10%, transparent);
  border-color: var(--accent);
}

/* globals.css */
.bg-circle-gradient {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 400px;
  height: 400px;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  background: radial-gradient(
    50% 50% at 50% 50%,
    rgba(0, 153, 255, 0.264) 0%,
    rgba(0, 23, 38, 0.3) 100%
  );
  /* border: 0.5px dashed;
  border-image-source: linear-gradient(
    98.84deg,
    #459cff 7.31%,
    rgba(0, 45, 95, 0.22) 50.81%,
    #459cff 93.48%
  );
  border-image-slice: 1; */
}

/* Make the circle larger on wider screens and ensure overlayed content sits above it */
.bg-circle-gradient {
  z-index: 0;
}
.hero-overlay { z-index: 2; position: relative; }

@media (min-width: 640px) {
  .bg-circle-gradient { width: 520px; height: 520px; }
}
@media (min-width: 1024px) {
  .bg-circle-gradient { width: 640px; height: 640px; }
}


/* Ensure specific components that use Tailwind arbitrary bg colors don't get overridden by CSS vars
   The how-it-works section uses an arbitrary Tailwind class `bg-[#0ea5a4]` which can be
   visually overridden by the global `body { background: var(--background); }` when
   the section is not creating its own stacking/context or if utility classes are missing.
   Add a targeted rule to guarantee the background follows the `data-theme` attribute. */
.how-it-works {
  /* Default (light) */
  background: #0ea5a4 !important;
}

/* Stronger specificity to override global body/background styles when needed */
section.how-it-works {
  background: #0ea5a4 !important;
}

html[data-theme='dark'] section.how-it-works {
  background: #0e212d !important;
}

/* Description text styling for HowItWorks component */
.how-desc { color: var(--muted); }

/* Light theme: force description white for contrast against the teal background */
html[data-theme='light'] .how-desc {
  color: #ffffff !important;
}

/* Dark theme: keep muted color (already defined by .text-muted) */
html[data-theme='dark'] .how-desc {
  color: var(--muted) !important;
}
